{"version":3,"sources":["components/Dados.jsx","components/FormApuesta.jsx","components/Historial.jsx","components/Saldo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dados","jugadaActual","saldo","setSaldo","resultados","setResultados","isPlaying","setIsPlaying","useState","dados","setDados","mensajeGanador","setMensajeGanador","analizarJugada","dado1","dado2","numero","apuesta","ganador","premio","useEffect","Math","ceil","random","tirarDados","id","FormApuesta","setJugadaActual","setNumero","setApuesta","errorNumero","setErrorNumero","errorApuesta","setErrorApuesta","errorValor","setErrorValor","className","onSubmit","e","preventDefault","htmlFor","type","value","onChange","parseInt","target","min","max","step","Historial","map","res","i","abs","Saldo","user","onClick","document","getElementById","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e0bfc2c5.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport '../css/dados.css'\r\n\r\nconst Dados = ({jugadaActual, saldo, setSaldo, resultados, setResultados, isPlaying, setIsPlaying}) => {\r\n\r\n    const [dados, setDados] = useState([0, 0])\r\n    const [mensajeGanador, setMensajeGanador] = useState('')\r\n\r\n    const tirarDados = () => {\r\n        const dado1 = Math.ceil(Math.random()*6)\r\n        const dado2 = Math.ceil(Math.random()*6)\r\n        setDados([dado1, dado2])\r\n        analizarJugada(dado1, dado2)\r\n    }\r\n    \r\n    const analizarJugada = (dado1, dado2) => {\r\n        const {numero, apuesta} = jugadaActual\r\n        let ganador = false\r\n        let premio = 0\r\n\r\n        if (dado1 + dado2 === numero){\r\n            premio = apuesta*2\r\n            setSaldo(saldo + premio)\r\n            ganador = true\r\n        }else{\r\n            if (dado1 === numero || dado2 === numero){\r\n                premio = apuesta\r\n                setSaldo(saldo + premio)\r\n                ganador = true\r\n            }\r\n            if (dado1 === numero && dado2 === numero){\r\n                premio += apuesta\r\n                setSaldo(saldo + apuesta)\r\n                ganador = true\r\n            }\r\n        }\r\n\r\n        if(ganador) setMensajeGanador('GANASTE')\r\n        else {\r\n            premio = -apuesta\r\n            setSaldo(saldo + premio)\r\n            setMensajeGanador('PERDISTE')\r\n        }\r\n\r\n        setResultados([...resultados, {numero, apuesta, ganador, premio, dados}])\r\n        setIsPlaying(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isPlaying)tirarDados();\r\n    }, [isPlaying])\r\n\r\n    return (\r\n        <div id=\"dados\">\r\n            <h3>DADOS</h3>\r\n            <div>\r\n                <p id=\"dado1\">{dados[0]}</p>\r\n                <p id=\"dado2\">{dados[1]}</p> \r\n            </div>\r\n            <h2>{mensajeGanador}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dados\r\n","import React, {useState} from 'react'\r\nimport '../css/form-apuesta.css'\r\n\r\nconst FormApuesta = ({setJugadaActual, saldo, setIsPlaying}) => {\r\n    \r\n    const [numero, setNumero] = useState(0)\r\n    const [apuesta, setApuesta] = useState(0)\r\n    const [errorNumero, setErrorNumero] = useState(false)\r\n    const [errorApuesta, setErrorApuesta] = useState(false)\r\n    const [errorValor, setErrorValor] = useState(false)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // control de ingreso de datos\r\n        if(!numero)setErrorNumero(true)\r\n        else setErrorNumero(false)\r\n\r\n        if(!apuesta)setErrorApuesta(true)\r\n        else setErrorApuesta(false)\r\n\r\n        if(!numero || !apuesta)return\r\n        \r\n        if(apuesta > saldo){\r\n            setErrorValor(true)\r\n            return\r\n        }\r\n\r\n        setErrorValor(false)\r\n        setJugadaActual({numero, apuesta})\r\n        setIsPlaying(true)\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-apuesta\" onSubmit={handleSubmit} >\r\n            <h2>Haz tu apuesta y presiona el boton de \"Jugar\"</h2>\r\n\r\n            <div>\r\n                <label htmlFor=\"numero\">Elige un NÃºmero del 1 al 12 </label>\r\n                <input\r\n                    type=\"number\" \r\n                    id=\"numero\" \r\n                    value={numero}\r\n                    onChange={(e) => setNumero(parseInt(e.target.value))} \r\n                    min={1} max={12} step={1} \r\n                />\r\n                {errorNumero ?<p className=\"error-campo\">Campo Obligatorio</p> :null}\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"apuesta\">Ingresa el valor de tu Apuesta</label>\r\n                <input \r\n                    type=\"number\" \r\n                    id=\"apuesta\" \r\n                    value={apuesta}\r\n                    onChange={(e) => setApuesta(parseInt(e.target.value))}\r\n                    min={1}\r\n                />\r\n                {errorApuesta ?<p className=\"error-campo\">Campo Obligatorio</p> :null}\r\n            </div>\r\n\r\n            <input className=\"btn-jugar\" type=\"submit\" value=\"Jugar\"/>\r\n            {errorValor && <p className=\"error-campo\">La apuesta debe ser menor o igual a tu saldo</p>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormApuesta\r\n","import React from 'react'\r\nimport '../css/historial.css'\r\n\r\nconst Historial = ({resultados}) => {\r\n    return (\r\n        <div id=\"historial\">\r\n            <h3>Historial de manos:</h3>\r\n            <ul>\r\n                {resultados.map((res, i) => (\r\n                    <li key={`mano${i}`}>\r\n                        <p>Mano numero {i + 1}</p>\r\n                        <p>Numero elegido: |{res.numero}|</p>\r\n                        <p>Valor de la apuesta: ${res.apuesta}</p>\r\n                        <p>Dados: |{res.dados[0]}| + |{res.dados[1]}|</p>\r\n                        {res.ganador\r\n                            ? <p>Ganaste ${res.premio}</p>\r\n                            : <p>Perdiste ${Math.abs(res.premio)}</p>\r\n                        }\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Historial\r\n","import React from 'react'\r\nimport '../css/saldo.css'\r\n\r\nconst Saldo = ({saldo, setSaldo, user}) => {\r\n\r\n    const handleClick = () => {\r\n        setSaldo(parseInt(document.getElementById('ingreso-dinero').value))\r\n    }\r\n    return (\r\n        <div id=\"saldo\">\r\n            {!saldo\r\n                ? <div>\r\n                    <h2>Hola {user}, tu saldo actual es de $0</h2>\r\n                    <p>Parece que no tienes dinero en tu cuenta..</p>\r\n                    <p>Â¿Quieres transferir dinero a tu cuenta de Apostar.MOV?</p>\r\n                    <label htmlFor=\"ingreso-dinero\"></label>\r\n                    <input type=\"number\" id=\"ingreso-dinero\" min={1} step={1}/>\r\n                    <button onClick={handleClick}>INGRESAR MONTO</button>\r\n                </div>\r\n                : <h2>Hola {user}, tu saldo actual es de ${saldo}</h2>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Saldo\r\n","import React, { Fragment, useState } from 'react'\nimport Dados from './components/Dados'\nimport FormApuesta from './components/FormApuesta'\nimport Historial from './components/Historial'\nimport Saldo from './components/Saldo'\n\nfunction App() {\n  \n  const [resultados, setResultados] = useState([])\n  const [jugadaActual, setJugadaActual] = useState({})\n  const [saldo, setSaldo] = useState(0)\n  const [isPlaying, setIsPlaying] = useState(false)\n  \n  return (\n    <Fragment>\n\n      <div className=\"titulo-principal\">\n        <h1>Bienvenidos a Apostar.MOV</h1>\n        <h2>Juego de apuesta de los dados</h2>\n      </div>\n\n      <Saldo\n        saldo={saldo}\n        setSaldo={setSaldo}\n        user=\"nombre_usuario\"\n      />\n\n      <FormApuesta \n        setJugadaActual={setJugadaActual} \n        saldo={saldo}\n        setIsPlaying={setIsPlaying}\n      />\n\n      <hr></hr>\n\n      <div className=\"seccion-juego\">\n        <Dados\n          jugadaActual={jugadaActual}\n          saldo={saldo}\n          setSaldo={setSaldo}\n          resultados={resultados}\n          setResultados={setResultados}\n          isPlaying={isPlaying}\n          setIsPlaying={setIsPlaying}\n        />\n        <Historial\n          resultados={resultados}\n        />\n      </div>\n\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}